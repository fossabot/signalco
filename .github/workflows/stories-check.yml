name: "stories-check"
on:
  pull_request:
    branches: [next, main]
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: "yarn"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --network-timeout 1000000
      - run: yarn stories-check
        id: runStoriesCheck
      - name: PR changes
        id: cpr
        if: failure() && steps.runStoriesCheck.outcome == 'failure'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.AT_GH_CD_REPO_PAT }}
          add-paths: ".stories-approved/**/*"
          committer: Signalco Automated <automated@signalco.io>
          commit-message: "[stories-check] Automated stories change"
          base: ${{ github.head_ref }}
          branch: "stories-check/change"
          delete-branch: true
          branch-suffix: short-commit-hash
          title: "[stories-check] Automated stories change"
      - name: Check outputs
        if: failure() && steps.runStoriesCheck.outcome == 'failure'
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
